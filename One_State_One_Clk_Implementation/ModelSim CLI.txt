vsim work.IITB_CPU(controller)
force -freeze sim:/IITB_CPU/clock 1 0, 0 {10000 ps} -r 20000
add wave -position end  sim:/IITB_CPU/A1
add wave -position end  sim:/IITB_CPU/A2
add wave -position end  sim:/IITB_CPU/A3
add wave -position end  sim:/IITB_CPU/D1
add wave -position end  sim:/IITB_CPU/D2
add wave -position end  sim:/IITB_CPU/D3
add wave -position end  sim:/IITB_CPU/M_add
add wave -position end  sim:/IITB_CPU/M_data_in
add wave -position end  sim:/IITB_CPU/M_data_out
add wave -position end  sim:/IITB_CPU/T1_in
add wave -position end  sim:/IITB_CPU/T1_out
add wave -position end  sim:/IITB_CPU/T2_in
add wave -position end  sim:/IITB_CPU/T2_out
add wave -position end  sim:/IITB_CPU/T3_in
add wave -position end  sim:/IITB_CPU/T3_out
add wave -position end  sim:/IITB_CPU/clock
add wave -position end  sim:/IITB_CPU/sp
add wave -position end  sim:/IITB_CPU/RF1/R0
add wave -position end  sim:/IITB_CPU/RF1/R1
add wave -position end  sim:/IITB_CPU/RF1/R2
add wave -position end  sim:/IITB_CPU/RF1/R3
add wave -position end  sim:/IITB_CPU/RF1/R4
add wave -position end  sim:/IITB_CPU/RF1/R5
add wave -position end  sim:/IITB_CPU/RF1/R6
add wave -position end  sim:/IITB_CPU/RF1/R7
add wave -position end  sim:/IITB_CPU/M1/data
when {stop_condition} {
  stop
  echo "All instructions executed successfully."
}
run -all